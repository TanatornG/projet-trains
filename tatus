[1mdiff --git a/README.md b/README.md[m
[1mindex ab995d0..f80d26d 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,3 +1,26 @@[m
 Projet de Trains - Nicolas Semp√©r√©[m
 [m
[31m-Les r√©ponses aux questions se situent dans le dossier "R√©ponses aux questions".[m
\ No newline at end of file[m
[32m+[m[32mLes r√©ponses aux questions du sujet se situent dans le dossier "R√©ponses aux questions".[m
[32m+[m[32m--> Cf <R√©ponses aux questions/Reponses_aux_questions.pdf>[m
[32m+[m
[32m+[m
[32m+[m[32mA chaque exercice correspond un fichier LTS, repr√©sentant le syst√®me √† la fin de chaque exercice.[m
[32m+[m[32mExercice 1 : Le comportement d‚Äôun train[m[41m [m
[32m+[m[32m--> Cf <Fichiers LTS/projet-trains-exercice1.lts>[m
[32m+[m
[32m+[m[32mExercice 2 : Plusieurs trains sur la ligne[m
[32m+[m[32m--> Cf <Fichiers LTS/projet-trains-exercice2.lts>[m
[32m+[m
[32m+[m[32mExercice 3 : √âviter les interblocages[m[41m [m
[32m+[m[32m--> Cf <Fichiers LTS/projet-trains-exercice3.lts>[m
[32m+[m
[32m+[m[32mExercice 4 : Gare interm√©diaire[m[41m [m
[32m+[m[32m--> Cf <Fichiers LTS/projet-trains-exercice4.lts>[m
[32m+[m
[32m+[m
[32m+[m[32mLa documentation (g√©n√©r√©e via javadoc), est dans le dossier "javadoc".[m
[32m+[m[32m--> Cf <javadoc/index.html> pour la consulter.[m
[32m+[m
[32m+[m
[32m+[m[32mLe code Java se trouve dans le fichier "src".[m
[32m+[m[32m--> Cf <src/train>[m
[1mdiff --git "a/R\303\251ponses aux questions/Exercice 1.txt" "b/R\303\251ponses aux questions/Exercice 1.txt"[m
[1mdeleted file mode 100644[m
[1mindex 494858e..0000000[m
[1m--- "a/R\303\251ponses aux questions/Exercice 1.txt"[m	
[1m+++ /dev/null[m
[36m@@ -1,44 +0,0 @@[m
[31m-Exercice 1 (Le comportement d‚Äôun train)[m
[31m-[m
[31m-‚ä≥ Question 1.1 :[m
[31m-Dans le diagramme de classes pr√©c√©dent, quel sera le r√¥le de chaque classe dans la[m
[31m-r√©alisation du d√©placement d‚Äôun train ?[m
[31m-[m
[31m-    Pour r√©aliser le d√©placement d'un train :[m
[31m-    - dans la classe "train", la m√©thode "move()" est appel√© :[m
[31m-[m
[31m-        - la m√©thode "setNewPos()" de la classe Position[m
[31m-        change la position du train :[m
[31m-            - la m√©thode "getNextElement()" de la classe Railway[m
[31m-            permet d'obtenir cette nouvelle position.[m
[31m-[m
[31m-        - la m√©thode "setNewDir()" de la classe Position[m
[31m-        change la direction du train s'il est en bout de ligne :[m
[31m-            - la m√©thode "getIndexOfElement()" de la classe Railway[m
[31m-            permet de v√©rifier si le train est en bout de ligne.[m
[31m-[m
[31m-[m
[31m-‚ä≥ Question 1.2 :[m
[31m-Modifiez le diagramme de classes initial en ajoutant les m√©thodes et/ou attributs[m
[31m-n√©cessaires √† la r√©alisation du d√©placement d‚Äôun train.[m
[31m-[m
[31m-    Voir l'image "Exercice 1 - Diagramme de classe".[m
[31m-    Les m√©thodes et attributs ajout√©es sont √©crits en bleu.[m
[31m-[m
[31m-[m
[31m-‚ä≥ Question 1.3 :[m
[31m-Donnez le code des m√©thodes identifi√©es. Pour valider le bon fonctionnement de vos[m
[31m-m√©thodes, vous pouvez afficher l‚Äô√©tat du train chaque fois qu‚Äôil change de position[m
[31m-[m
[31m-    Les m√©thodes ajout√©es sont toutes dans le dossier src/train :[m
[31m-        - move() | classe Train[m
[31m-        - setNewPos() | classe Position[m
[31m-        - setNewDir() | classe Position[m
[31m-        - getNextElement() | classe Railway[m
[31m-        - getIndexOfElement() | classe Railway[m
[31m-        - getName() | classe Element[m
[31m-[m
[31m-    On ajoute la m√©thode "getName()" √† la classe Element afin d'afficher la position[m
[31m-    du train √† tout instant.[m
[31m-    Le comportement du train est celui attendu[m
[31m-    (on appelle la m√©thode move() 20 fois dans le Main).[m
